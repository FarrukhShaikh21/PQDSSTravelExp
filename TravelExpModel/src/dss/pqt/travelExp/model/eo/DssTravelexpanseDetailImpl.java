package dss.pqt.travelExp.model.eo;

import java.math.BigDecimal;

import java.sql.SQLException;

import javax.faces.context.ExternalContext;
import javax.faces.context.FacesContext;

import javax.servlet.http.HttpSession;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Sep 21 12:57:25 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DssTravelexpanseDetailImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        RoutIdPk,
        DetailDate,
        Transportation,
        TripType,
        FareAmount,
        TaxAmount,
        OtherAmount,
        TotAmount,
        UserIdFk,
        EnterDate,
        LastUpdatedBy,
        LastUpdatedDate,
        TransportMode,
        ToLocation,
        FromLocation,
        ExpIdFk,
        VoucherIdFk,
        DssTravelExpanseReimbursement;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ROUTIDPK = AttributesEnum.RoutIdPk.index();
    public static final int DETAILDATE = AttributesEnum.DetailDate.index();
    public static final int TRANSPORTATION = AttributesEnum.Transportation.index();
    public static final int TRIPTYPE = AttributesEnum.TripType.index();
    public static final int FAREAMOUNT = AttributesEnum.FareAmount.index();
    public static final int TAXAMOUNT = AttributesEnum.TaxAmount.index();
    public static final int OTHERAMOUNT = AttributesEnum.OtherAmount.index();
    public static final int TOTAMOUNT = AttributesEnum.TotAmount.index();
    public static final int USERIDFK = AttributesEnum.UserIdFk.index();
    public static final int ENTERDATE = AttributesEnum.EnterDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int TRANSPORTMODE = AttributesEnum.TransportMode.index();
    public static final int TOLOCATION = AttributesEnum.ToLocation.index();
    public static final int FROMLOCATION = AttributesEnum.FromLocation.index();
    public static final int EXPIDFK = AttributesEnum.ExpIdFk.index();
    public static final int VOUCHERIDFK = AttributesEnum.VoucherIdFk.index();
    public static final int DSSTRAVELEXPANSEREIMBURSEMENT = AttributesEnum.DssTravelExpanseReimbursement.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DssTravelexpanseDetailImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("dss.pqt.travelExp.model.eo.DssTravelexpanseDetail");
    }


    /**
     * Gets the attribute value for RoutIdPk, using the alias name RoutIdPk.
     * @return the value of RoutIdPk
     */
    public Number getRoutIdPk() {
        return (Number) getAttributeInternal(ROUTIDPK);
    }

    /**
     * Sets <code>value</code> as the attribute value for RoutIdPk.
     * @param value value to set the RoutIdPk
     */
    public void setRoutIdPk(Number value) {
        setAttributeInternal(ROUTIDPK, value);
    }

    /**
     * Gets the attribute value for DetailDate, using the alias name DetailDate.
     * @return the value of DetailDate
     */
    public Date getDetailDate() {
        return (Date) getAttributeInternal(DETAILDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DetailDate.
     * @param value value to set the DetailDate
     */
    public void setDetailDate(Date value) {
        setAttributeInternal(DETAILDATE, value);
    }

    /**
     * Gets the attribute value for Transportation, using the alias name Transportation.
     * @return the value of Transportation
     */
    public String getTransportation() {
        return (String) getAttributeInternal(TRANSPORTATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Transportation.
     * @param value value to set the Transportation
     */
    public void setTransportation(String value) {
        setAttributeInternal(TRANSPORTATION, value);
    }

    /**
     * Gets the attribute value for TripType, using the alias name TripType.
     * @return the value of TripType
     */
    public String getTripType() {
        return (String) getAttributeInternal(TRIPTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TripType.
     * @param value value to set the TripType
     */
    public void setTripType(String value) {
        setAttributeInternal(TRIPTYPE, value);
    }

    /**
     * Gets the attribute value for FareAmount, using the alias name FareAmount.
     * @return the value of FareAmount
     */
    public Number getFareAmount() {
        return (Number) getAttributeInternal(FAREAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for FareAmount.
     * @param value value to set the FareAmount
     */
    public void setFareAmount(Number value) {
        setAttributeInternal(FAREAMOUNT, value);
    }

    /**
     * Gets the attribute value for TaxAmount, using the alias name TaxAmount.
     * @return the value of TaxAmount
     */
    public Number getTaxAmount() {
        return (Number) getAttributeInternal(TAXAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxAmount.
     * @param value value to set the TaxAmount
     */
    public void setTaxAmount(Number value) {
        setAttributeInternal(TAXAMOUNT, value);
    }

    /**
     * Gets the attribute value for OtherAmount, using the alias name OtherAmount.
     * @return the value of OtherAmount
     */
    public Number getOtherAmount() {
        return (Number) getAttributeInternal(OTHERAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for OtherAmount.
     * @param value value to set the OtherAmount
     */
    public void setOtherAmount(Number value) {
        setAttributeInternal(OTHERAMOUNT, value);
    }

    /**
     * Gets the attribute value for TotAmount, using the alias name TotAmount.
     * @return the value of TotAmount
     */
    public Number getTotAmount() {
        return (Number) getAttributeInternal(TOTAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotAmount.
     * @param value value to set the TotAmount
     */
    public void setTotAmount(Number value) {
        setAttributeInternal(TOTAMOUNT, value);
    }

    /**
     * Gets the attribute value for UserIdFk, using the alias name UserIdFk.
     * @return the value of UserIdFk
     */
    public Number getUserIdFk() {
        return (Number) getAttributeInternal(USERIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserIdFk.
     * @param value value to set the UserIdFk
     */
    public void setUserIdFk(Number value) {
        setAttributeInternal(USERIDFK, value);
    }

    /**
     * Gets the attribute value for EnterDate, using the alias name EnterDate.
     * @return the value of EnterDate
     */
    public Date getEnterDate() {
        return (Date) getAttributeInternal(ENTERDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EnterDate.
     * @param value value to set the EnterDate
     */
    public void setEnterDate(Date value) {
        setAttributeInternal(ENTERDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the value of LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for TransportMode, using the alias name TransportMode.
     * @return the value of TransportMode
     */
    public String getTransportMode() {
        return (String) getAttributeInternal(TRANSPORTMODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TransportMode.
     * @param value value to set the TransportMode
     */
    public void setTransportMode(String value) {
        setAttributeInternal(TRANSPORTMODE, value);
    }

    /**
     * Gets the attribute value for ToLocation, using the alias name ToLocation.
     * @return the value of ToLocation
     */
    public String getToLocation() {
        return (String) getAttributeInternal(TOLOCATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for ToLocation.
     * @param value value to set the ToLocation
     */
    public void setToLocation(String value) {
        setAttributeInternal(TOLOCATION, value);
    }

    /**
     * Gets the attribute value for FromLocation, using the alias name FromLocation.
     * @return the value of FromLocation
     */
    public String getFromLocation() {
        return (String) getAttributeInternal(FROMLOCATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for FromLocation.
     * @param value value to set the FromLocation
     */
    public void setFromLocation(String value) {
        setAttributeInternal(FROMLOCATION, value);
    }

    /**
     * Gets the attribute value for ExpIdFk, using the alias name ExpIdFk.
     * @return the value of ExpIdFk
     */
    public Number getExpIdFk() {
        return (Number) getAttributeInternal(EXPIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExpIdFk.
     * @param value value to set the ExpIdFk
     */
    public void setExpIdFk(Number value) {
        setAttributeInternal(EXPIDFK, value);
    }

    /**
     * Gets the attribute value for VoucherIdFk, using the alias name VoucherIdFk.
     * @return the value of VoucherIdFk
     */
    public Number getVoucherIdFk() {
        return (Number) getAttributeInternal(VOUCHERIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for VoucherIdFk.
     * @param value value to set the VoucherIdFk
     */
    public void setVoucherIdFk(Number value) {
        setAttributeInternal(VOUCHERIDFK, value);
    }


    /**
     * @return the associated entity DssTravelExpanseReimbursementImpl.
     */
    public DssTravelExpanseReimbursementImpl getDssTravelExpanseReimbursement() {
        return (DssTravelExpanseReimbursementImpl) getAttributeInternal(DSSTRAVELEXPANSEREIMBURSEMENT);
    }

    /**
     * Sets <code>value</code> as the associated entity DssTravelExpanseReimbursementImpl.
     */
    public void setDssTravelExpanseReimbursement(DssTravelExpanseReimbursementImpl value) {
        setAttributeInternal(DSSTRAVELEXPANSEREIMBURSEMENT, value);
    }

    /**
     * @param routIdPk key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number routIdPk) {
        return new Key(new Object[] { routIdPk });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
          protected void create(AttributeList attributeList) {
              super.create(attributeList);
              Date currentDate = new Date();
              setEnterDate((Date) currentDate.getCurrentDate());
              setLastUpdatedDate((Date) currentDate.getCurrentDate());
              SequenceImpl seq = new SequenceImpl("DSS_TRAVELEXPANSE_DETAIL_SEQ", getDBTransaction());
              setRoutIdPk(seq.getSequenceNumber());
              
              
              FacesContext fctx = FacesContext.getCurrentInstance();
              ExternalContext ectx = fctx.getExternalContext();
              HttpSession userSession = (HttpSession) ectx.getSession(false);
              try {
                  setUserIdFk(new Number(userSession.getAttribute("pUserId")));
                  setLastUpdatedBy(new Number(userSession.getAttribute("pUserId")));
              } catch (SQLException ex) {
                  setUserIdFk(new Number(0));
                  setLastUpdatedBy(new Number(0));
              }
          
          }
    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    protected void doDML(int operation, TransactionEvent e) {
        Date currentDate = new Date();
        if (operation == DML_UPDATE) {
            setLastUpdatedDate((Date) currentDate.getCurrentDate());
            FacesContext fctx = FacesContext.getCurrentInstance();
            ExternalContext ectx = fctx.getExternalContext();
            HttpSession userSession = (HttpSession) ectx.getSession(false);
            try {
                setUserIdFk(new Number(userSession.getAttribute("pUserId")));
                setLastUpdatedBy(new Number(userSession.getAttribute("pUserId")));
            } catch (SQLException ex) {
                setUserIdFk(new Number(0));
                setLastUpdatedBy(new Number(0));
            }
        }
        super.doDML(operation, e);
    }
    }

